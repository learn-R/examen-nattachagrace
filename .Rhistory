pacman::p_load(tidyverse, #colección de paquetes, del cuál utilizaremos dplyr y haven
magrittr,  #procesamiento de datos
sjPlot, #visualización
sjmisc, #explorar datos
srvyr,  #para trabajar con objetos encuesta, y realizar cálculos en diálogo con dplyr
dplyr,  #nos permite seleccionar variables de un set de datos
haven)  #cargar y exportar bases de datos en formatos .sav y .dta
BP <- read_dta("input/data/base-personas-viii-epf-(stata).dta")
datos_proc <- BP%>%
select(SEXO,
EDAD,
gastos=GASTOT_HD,
ingreso_liquido=ING_DISP_HOG_HD,
EDUNIVEL,
vivienda_tipo=VP,
vivienda_tenencia=TVP,
ZONA,
NPERSONAS,
FE,
VARSTRAT,
VARUNIT)
datos_proc <- datos_proc %>%
mutate(N_educ = car::recode(EDUNIVEL, c("c(1,2)=1;
c(3,4,5,6)=2;
c(7,8)=3;
c(9,10,11,12)=4;
c(13,14)=5;
c(15,15,17)=6;
c(-88,-99)=NA"),
levels = c(1,2,3,4,5,6)))
datos_proc <- datos_proc%>%
mutate(edad_tramos = case_when(EDAD <= 18  ~  "Joven",
EDAD >= 19 & EDAD <=64 ~ "Adulto",
EDAD > 65 ~ "Adulto mayor",
TRUE ~ NA_character_))
datos_proc$edad_tramos <-  forcats::as_factor(datos_proc$edad_tramos)
datos_proc<-datos_proc %>%
mutate(sexo_cat = case_when(SEXO == 1 ~ "Hombre",
SEXO ==2 ~ "Mujer",
TRUE ~ NA_character_))
datos_proc$sexo_cat <-  forcats::as_factor(datos_proc$sexo_cat)
datos_proc<-datos_proc %>%
mutate(zona_cat = case_when(ZONA == 1 ~ "Gran Santiago",
ZONA ==2 ~ "Otras capitales regionales",
TRUE ~ NA_character_))
datos_proc$zona_cat <-  forcats::as_factor(datos_proc$zona_cat)
saveRDS(datos_proc, file = "output/data/datos_proc.rds")
options(OutDec= ",", digits = 3)
pacman::p_load(tidyverse,
magrittr,
sjPlot,
sjmisc,
srvyr,
survey,
dplyr,
haven)
datos_proc <- readRDS("output/data/datos_proc.rds")
presupuestos_familiares <- datos_proc %>%
as_survey_design(ids = VARUNIT,
strata = VARSTRAT,
weights = FE)
presupuestos_familiares %>%
summarise(media_ingreso = survey_mean(ingreso_liquido, vartype = "ci", level = .95, na.rm=T))
presupuestos_familiares %>%
group_by(sexo_cat) %>%
summarise(ing_medio_S = survey_mean(ingreso_liquido, vartype = "ci", level = .95, na.rm=T))
presupuestos_familiares %>%
summarise(media_gastos = survey_mean(gastos, vartype = "ci", level = .95, na.rm=T))
presupuestos_familiares %>%
group_by(sexo_cat) %>%
summarise(gastos_S = survey_mean(gastos, vartype = "ci", level = .95, na.rm=T))
pacman::p_load(tidyverse,
magrittr,
sjPlot,
sjmisc,
srvyr,
survey)
pacman::p_load(tidyverse,
magrittr,
sjPlot,
srvyr,
survey)
datos_proc <- readRDS("output/data/datos_proc.rds")
presupuestos_familiares <- datos_proc %>%
as_survey_design(ids = VARUNIT,
strata = VARSTRAT,
weights = FE)
presupuestos_familiares %>%
summarise(media_ingreso = survey_mean(ingreso_liquido, vartype = "ci", level = .95, na.rm=T))
modelo1<- svyglm(gastos ~ sexo_cat + ingreso_liquido + zona_cat,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
modelo1<- svyglm(gastos ~ sexo_cat + ingreso_liquido,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
sjPlot::tab_model(modelo1,
show.ci=FALSE,
encoding = "UTF-8",
file = "output/figures/tab_modelo1.doc")
modelo2<- svyglm(gastos ~ sexo_cat + ingreso_liquido + NPERSONAS + edad_tramos,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
sjPlot::plot_model(modelo2,
ci.lvl = c(0.95),
title = "Encuesta presupuestos familiares",
show.p = T,
show.values =  T,
vline.color = "red")
modelo2<- svyglm(gastos ~ sexo_cat + ingreso_liquido + NPERSONAS + edad_tramos,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
modelo3<- svyglm(gastos ~ sexo_cat + ingreso_liquido + NPERSONAS + edad_tramos,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
modelo2<- svyglm(gastos ~ sexo_cat + ingreso_liquido + zona_cat,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
sjPlot::plot_model(modelo2,
ci.lvl = c(0.95),
title = "EPF por sexo y zona",
show.p = T,
show.values =  T,
vline.color = "red")
sjPlot::tab_model(modelo3,
show.ci=FALSE,
title = "EPF por numero de personas en el hogar y sus edades"
encoding = "UTF-8",
sjPlot::tab_model(modelo3,
show.ci=FALSE,
title = "EPF por numero de personas en el hogar y sus edades",
encoding = "UTF-8",
file = "output/figures/tab_modelo3.doc")
sjPlot::plot_model(modelo2,
ci.lvl = c(0.95),
title = "EPF por sexo y zona",
show.p = T,
show.values =  T,
vline.color = "red",
file = "output/figures/graf_modelo2.doc")
modelo4<- svyglm(gastos ~ sexo_cat + ingreso_liquido + vivienda_tipo + vivienda_tenencia,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
sjPlot::plot_model(modelo4,
ci.lvl = c(0.95),
title = "EPF por tipo y tenencia de vivienda",
show.p = T,
show.values =  T,
vline.color = "red",
file = "output/figures/graf_modelo4.doc")
sjPlot::tab_model(modelo5,
show.ci=FALSE,
encoding = "UTF-8",
title = "EPF por nidel educacional"
file = "output/figures/tab_modelo3.doc")
sjPlot::tab_model(modelo5,
show.ci=FALSE,
encoding = "UTF-8",
title = "EPF por nidel educacional",
file = "output/figures/tab_modelo3.doc")
modelo5<- svyglm(gastos ~ sexo_cat + ingreso_liquido + N_educ,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
sjPlot::tab_model(modelo5,
show.ci=FALSE,
encoding = "UTF-8",
title = "EPF por nidel educacional",
file = "output/figures/tab_modelo3.doc")
sjPlot::tab_model(modelo5,
show.ci=FALSE,
encoding = "UTF-8",
title = "EPF por nidel educacional",
file = "output/figures/tab_modelo5.doc")
presupuestos_familiares %>%
summarise(media_ingreso = survey_mean(ingreso_liquido, vartype = "ci", level = .95, na.rm=T))
presupuestos_familiares %>%
group_by(sexo_cat) %>%
summarise(ing_medio_S = survey_mean(ingreso_liquido, vartype = "ci", level = .95, na.rm=T))
presupuestos_familiares %>%
summarise(media_gastos = survey_mean(gastos, vartype = "ci", level = .95, na.rm=T))
presupuestos_familiares %>%
group_by(sexo_cat) %>%
summarise(gastos_S = survey_mean(gastos, vartype = "ci", level = .95, na.rm=T))
sjPlot::tab_model(modelo1,
show.ci=FALSE,
title = "EPF por sexo",
encoding = "UTF-8",
p.val = "wald",
file = "output/figures/tab_modelo1.doc")
sjPlot::tab_model(modelo3,
show.ci=FALSE,
title = "EPF por numero de personas en el hogar y sus edades",
encoding = "UTF-8",
p.val = "wald",
file = "output/figures/tab_modelo3.doc")
modelo1<- svyglm(gastos ~ sexo_cat + ingreso_liquido,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
summary(modelo1)
summary(modelo2)
sjPlot::plot_model(modelo2,
ci.lvl = c(0.95),
title = "EPF por sexo y zona",
show.p = T,
show.values =  T,
vline.color = "red",
file = "output/figures/graf_modelo2.doc")
summary(modelo2)
sjPlot::plot_model(modelo4,
ci.lvl = c(0.95),
title = "EPF por tipo y tenencia de vivienda",
show.p = T,
show.values =  T,
vline.color = "red")
summary(modelo4)
sjPlot::tab_model(modelo5,
show.ci=FALSE,
encoding = "UTF-8",
title = "EPF por nidel educacional",
file = "output/figures/tab_modelo5.doc")
sjPlot::tab_model(modelo5,
show.ci=FALSE,
encoding = "UTF-8",
p.val = "wald",
title = "EPF por nidel educacional",
file = "output/figures/tab_modelo5.doc")
knitr::opts_chunk$set(echo = F, warning = F, message = F)
Sys.setlocale("LC_CTYPE", "spanish")
options(OutDec= ",", digits = 3)
datos_proc <- readRDS("output/data/datos_proc.rds")
obj_enc <- datos_proc %>%
as_survey_design(ids = 1 ,
weights = factor_expansion)
datos_proc %>%
select(cuidarse, riesgo_cont) %>%
tab_corr(.,
triangle = "lower",
title = "Tabla 1 Matriz de correlación",
encoding = "UTF-8",
file = "output/figures/tabla_correlacion.doc")
modelo1 <- lm(cuidarse ~ riesgo_cont + trabaja + edad, weights= factor_expansion, data = datos_proc)
modelo2 <- lm(cuidarse ~ riesgo + trabaja + edad, weights = factor_expansion, data = datos_proc)
sjPlot::tab_model(list(modelo1,modelo2),
string.intercept = "(Intercepto)",
string.pred = "Predictores",
p.style = "stars",
show.ci = FALSE,
collapse.ci = T,
digits = 3,
dv.labels = c("Modelo 1", "Modelo 2"),
show.reflvl = TRUE,
encoding = "UTF-8",
lang = "es")
plot_model(modelo2, type = c("est"),
show.intercept = T,
show.values = T,
show.p = T,
digits = 3,
vline.color = "green",
title = "Modelo de regresión lineal para modelo 2")
options(OutDec= ",", digits = 3)
options(OutDec= ",", digits = 3)
datos_proc <- readRDS("output/data/datos_proc.rds")
presupuestos_familiares <- datos_proc %>%
as_survey_design(ids = VARUNIT,
strata = VARSTRAT,
weights = FE)
presupuestos_familiares %>%
summarise(media_ingreso = survey_mean(ingreso_liquido, vartype = "ci", level = .95, na.rm=T))
presupuestos_familiares %>%
group_by(sexo_cat) %>%
summarise(ing_medio_S = survey_mean(ingreso_liquido, vartype = "ci", level = .95, na.rm=T))
presupuestos_familiares %>%
summarise(media_gastos = survey_mean(gastos, vartype = "ci", level = .95, na.rm=T))
presupuestos_familiares %>%
group_by(sexo_cat) %>%
summarise(gastos_S = survey_mean(gastos, vartype = "ci", level = .95, na.rm=T))
modelo1<- svyglm(gastos ~ sexo_cat + ingreso_liquido,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
sjPlot::tab_model(modelo1,
show.ci=FALSE,
title = "EPF por sexo",
encoding = "UTF-8",
p.val = "wald",
file = "output/figures/tab_modelo1.doc")
modelo2<- svyglm(gastos ~ sexo_cat + ingreso_liquido + zona_cat,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
sjPlot::plot_model(modelo2,
ci.lvl = c(0.95),
title = "EPF por sexo y zona",
show.p = T,
show.values =  T,
vline.color = "red")
modelo3<- svyglm(gastos ~ sexo_cat + ingreso_liquido + NPERSONAS + edad_tramos,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
sjPlot::tab_model(modelo3,
show.ci=FALSE,
title = "EPF por numero de personas en el hogar y sus edades",
encoding = "UTF-8",
p.val = "wald",
file = "output/figures/tab_modelo3.doc")
modelo4<- svyglm(gastos ~ sexo_cat + ingreso_liquido + vivienda_tipo + vivienda_tenencia,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
sjPlot::plot_model(modelo4,
ci.lvl = c(0.95),
title = "EPF por tipo y tenencia de vivienda",
show.p = T,
show.values =  T,
vline.color = "red")
modelo5<- svyglm(gastos ~ sexo_cat + ingreso_liquido + N_educ,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
sjPlot::tab_model(modelo5,
show.ci=FALSE,
encoding = "UTF-8",
p.val = "wald",
title = "EPF por nidel educacional",
file = "output/figures/tab_modelo5.doc")
sjPlot::tab_model(modelo5,
show.ci=FALSE,
encoding = "UTF-8",
p.val = "wald",
title = "EPF por nidel educacional",
file = "output/figures/tab_modelo5.doc")
sjPlot::tab_model(modelo5,
show.ci=FALSE,
encoding = "UTF-8",
p.val = "wald",
title = "EPF por nidel educacional",
file = "output/figures/tab_modelo5.doc")
modelo5<- svyglm(gastos ~ sexo_cat + ingreso_liquido + N_educ,
family = gaussian(link = "identity"),
design = presupuestos_familiares)
sjPlot::tab_model(modelo5,
show.ci=FALSE,
encoding = "UTF-8",
p.val = "wald",
title = "EPF por nidel educacional",
file = "output/figures/tab_modelo5.doc")
sjPlot::tab_model(modelo5,
show.ci=FALSE,
title = "EPF por nivel educacional",
encoding = "UTF-8",
p.val = "wald",
file = "output/figures/tab_modelo5.doc")
sjPlot::tab_model(modelo5,
show.ci=FALSE,
title = "EPF por nivel educacional",
encoding = "UTF-8",
p.val = "wald",
file = "output/figures/tab_modelo5.doc")
sjPlot::tab_model(modelo5,
show.ci=FALSE,
title = "EPF por nivel educacional",
encoding = "UTF-8",
p.val = "wald",
file = "output/figures/tab_modelo5.doc")
sjPlot::tab_model(modelo5,
show.ci=FALSE,
title = "EPF por nivel educacional",
encoding = "UTF-8",
p.val = "wald",
file = "output/figures/tab_modelo5.doc")
sjPlot::plot_model(modelo4,
ci.lvl = c(0.95),
title = "EPF por tipo y tenencia de vivienda",
show.p = T,
show.values =  T,
vline.color = "red")
sjPlot::plot_model(modelo4,
ci.lvl = c(0.95),
title = "EPF por tipo y tenencia de vivienda",
show.p = T,
show.values =  T,
vline.color = "red")
